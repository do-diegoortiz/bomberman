{"version":3,"sources":["app/core/constants.js","app/core/exit-screen.js","app/core/level-item.js","app/core/level.js","app/core/player.js","app/core/portal.js","app/core/splash.js","app/core/game.js","app/app.js"],"names":["levelItemType","EMPTY","SOFT_WALL","HARD_WALL","OUTER_WALL","directions","TOP","RIGHT","DOWN","LEFT","ExitScreen","document","createElement","getElementById","classList","add","appendChild","remove","LevelItem","LEVEL_WIDTH","LEVEL_HEIGHT","SOFT_WALL_RATIO","Level","forEach","row","y","column","x","newBlock","cloneNode","type","setAttribute","explosionComplete","style","top","left","setTimeout","player","direction","rowIndex","colIndex","isFirstRowCol","isHardWall","Math","random","createLevelItem","Array","fill","map","newRow","nodesToDelete","target_top","includes","node","push","target_right","target_bottom","target_left","frame","animate","backgroundPositionX","window","requestAnimationFrame","bombEl","frameY","setInterval","backgroundPositionY","MAX_FRAMES","Player","transform","canMove","className","Portal","floor","cssText","frameX","Splash","docStyles","innerHTML","splashScreen","head","rootEl","backgroundAnimation","Game","game","audioElement","sourceElement","bomb","explosion","exit","render","src","soundtrackAudio","armBombTrackAudio","explodeTrackAudio","exitTrackAudio","event","destroy","keyCode","move","armBomb","play","console","log","addEventListener","removeEventListener","pause","init"],"mappings":"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","file":"app.ede836e2.js","sourceRoot":"..\\src","sourcesContent":["export const levelItemType = {\r\n    EMPTY: 'Empty',\r\n    SOFT_WALL: 'SoftWall',\r\n    HARD_WALL: 'HardWall',\r\n    OUTER_WALL: 'OuterWall'\r\n}\r\n\r\nexport const directions = {\r\n    TOP: 'top',\r\n    RIGHT: 'right',\r\n    DOWN: 'down',\r\n    LEFT: 'left'\r\n}","import './exit-screen.scss'\r\n\r\nexport class ExitScreen {\r\n    #exitScreen = document.createElement('div')\r\n    #rootEl = document.getElementById('root');\r\n\r\n    render() {\r\n        this.#exitScreen.classList.add('exit-screen')\r\n        this.#rootEl.appendChild(this.#exitScreen)\r\n    }\r\n\r\n    destroy() {\r\n        this.#exitScreen.remove()\r\n    }\r\n}","import { levelItemType } from \"./constants\";\r\nexport class LevelItem {\r\n    type = levelItemType.EMPTY\r\n}\r\n","import { directions, levelItemType } from './constants'\r\nimport { LevelItem } from './level-item'\r\nimport './level.scss'\r\n\r\nconst LEVEL_WIDTH = 13\r\nconst LEVEL_HEIGHT = 13\r\nconst SOFT_WALL_RATIO = 0.1\r\n\r\nexport class Level {\r\n    #columns = []\r\n    #levelEl = document.createElement('div');\r\n    #rootEl = document.getElementById('root');\r\n    #block = document.createElement('div');\r\n\r\n    render() {\r\n        this.#columns = this.#getColumns();\r\n        this.#block.classList.add('block');\r\n\r\n        this.#setInitialWalls();\r\n\r\n        this.#columns.forEach((row, y) => {\r\n            row.forEach((column, x) => {\r\n                const newBlock = this.#block.cloneNode();\r\n                newBlock.classList.add(column.type);\r\n                newBlock.setAttribute('id', `${x},${y}`)\r\n                this.#levelEl.appendChild(newBlock);\r\n            });\r\n        });\r\n        \r\n        this.#levelEl.classList.add('level');\r\n        this.#rootEl.appendChild(this.#levelEl)\r\n        this.#animate()\r\n    }\r\n\r\n    #setInitialWalls() {\r\n        this.#columns.forEach((row, rowIndex) => {\r\n            row.forEach((column, colIndex) => {\r\n                if (rowIndex === 6 && colIndex === 6) {\r\n                    return;\r\n                }\r\n\r\n                const isFirstRowCol = (rowIndex === 0) || (colIndex === 0)\r\n                const isLastRowCol = (rowIndex === LEVEL_HEIGHT - 1) || (colIndex === LEVEL_WIDTH - 1)\r\n\r\n                const isHardWall = (rowIndex % 2 === 0) && (colIndex % 2 === 0)\r\n\r\n                if (isFirstRowCol || isLastRowCol) {\r\n                    column.type = levelItemType.OUTER_WALL\r\n                } else if (isHardWall) {\r\n                    column.type = levelItemType.HARD_WALL\r\n                } else if (Math.random() < SOFT_WALL_RATIO) {\r\n                    column.type = levelItemType.SOFT_WALL\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    armBomb(x, y, explosionComplete) {\r\n        const newBlock = this.#block.cloneNode();\r\n        newBlock.classList.add('bomb');\r\n        newBlock.style.top = `${y * 50}px`\r\n        newBlock.style.left = `${x * 50}px`\r\n        this.#levelEl.appendChild(newBlock);\r\n\r\n        setTimeout(() => {\r\n            setTimeout(() => {\r\n                this.#detonate(x, y)\r\n                newBlock.remove();\r\n                explosionComplete()\r\n            }, 900)\r\n\r\n            this.#animateBomb(newBlock)\r\n        }, 1100)\r\n    }\r\n\r\n    canMove(player, direction) {\r\n        switch (direction) {\r\n            case directions.LEFT:\r\n                return this.#columns[player.y][player.x - 1].type === levelItemType.EMPTY\r\n            case directions.TOP:\r\n                return this.#columns[player.y - 1][player.x].type === levelItemType.EMPTY\r\n            case directions.RIGHT:\r\n                return this.#columns[player.y][player.x + 1].type === levelItemType.EMPTY\r\n            case directions.DOWN:\r\n                return this.#columns[player.y + 1][player.x].type === levelItemType.EMPTY\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.#levelEl.remove()\r\n    }\r\n\r\n    #getColumns() {\r\n        const createLevelItem = () => {\r\n            return new LevelItem()\r\n        }\r\n\r\n        const createCellGroup = () => {\r\n            const newRow = new Array(LEVEL_WIDTH).fill(null)\r\n            return newRow.map(createLevelItem);\r\n        }\r\n\r\n        return new Array(LEVEL_HEIGHT).fill(null).map(createCellGroup)\r\n    }\r\n\r\n    #detonate(x, y) {\r\n        const nodesToDelete = [];\r\n\r\n        const target_top = this.#columns[y-1][x]\r\n        if (target_top.type.includes(levelItemType.SOFT_WALL)) {\r\n            target_top.type = levelItemType.EMPTY\r\n            const node = document.getElementById(`${x},${y-1}`)\r\n            nodesToDelete.push(node)\r\n        }\r\n\r\n        const target_right = this.#columns[y][x+1]\r\n        if (target_right.type.includes(levelItemType.SOFT_WALL)) {\r\n            target_right.type = levelItemType.EMPTY\r\n            const node = document.getElementById(`${x+1},${y}`)\r\n            nodesToDelete.push(node)\r\n        }\r\n\r\n        const target_bottom = this.#columns[y+1][x]\r\n        if (target_bottom.type.includes(levelItemType.SOFT_WALL)) {\r\n            target_bottom.type = levelItemType.EMPTY\r\n            const node = document.getElementById(`${x},${y+1}`)\r\n            nodesToDelete.push(node)\r\n        }\r\n\r\n        const target_left = this.#columns[y][x-1]\r\n        if (target_left.type.includes(levelItemType.SOFT_WALL)) {\r\n            target_left.type = levelItemType.EMPTY\r\n            const node = document.getElementById(`${x-1},${y}`)\r\n            nodesToDelete.push(node)\r\n        }\r\n\r\n        nodesToDelete.forEach(node => {\r\n            node.classList.remove(levelItemType.SOFT_WALL)\r\n            node.classList.add(levelItemType.EMPTY)\r\n        })\r\n    }\r\n\r\n    #animate() {   \r\n        let frame = 1\r\n\r\n        const animate = () => {\r\n            this.#levelEl.classList.remove(`hard-wall-${frame}`)\r\n            frame++\r\n            if (frame > 6) {\r\n                frame = 1\r\n            }\r\n\r\n            this.#levelEl.style.backgroundPositionX = `-${frame*650}px`\r\n            this.#levelEl.classList.add(`hard-wall-${frame}`)\r\n\r\n            const timeout = frame === 6 ? 2000 : 50\r\n            setTimeout(() => {\r\n                window.requestAnimationFrame(() => animate())\r\n            }, timeout)\r\n        }\r\n\r\n        animate();\r\n    }\r\n\r\n    #animateBomb(bombEl) {   \r\n        let frame = 1\r\n        let frameY = 1\r\n\r\n        const animate = () => {\r\n            frame++\r\n            frameY++\r\n            if (frame > 6) {\r\n                frame = 1\r\n            }\r\n\r\n            if (frameY > 3) {\r\n                frameY = 1\r\n            }\r\ndebugger;\r\n            bombEl.style.backgroundPositionX = `-${frame*50}px`\r\n            bombEl.style.backgroundPositionY = `-${frameY*50}px`\r\n        }\r\n\r\n        setInterval(animate, 50)\r\n    }\r\n}","import { directions } from './constants'\r\nimport './player.scss'\r\n\r\nconst MAX_FRAMES = 4\r\n\r\nexport class Player {\r\n    x = 1;\r\n    y = 1;\r\n    #frame = 1\r\n    #playerEl = document.createElement('div')\r\n    #rootEl = document.getElementById('root');\r\n\r\n    render() {\r\n        this.#playerEl.classList.add('player')\r\n        this.#playerEl.style.transform = `translate(${this.x * 50}px, ${this.y * 50}px)`\r\n\r\n        this.#rootEl.appendChild(this.#playerEl)\r\n    }\r\n\r\n    destroy() {\r\n        this.#playerEl.remove()\r\n    }\r\n\r\n    move(direction, canMove) {\r\n        if (canMove) {\r\n            switch (direction) {\r\n                case directions.RIGHT:\r\n                    this.x = this.x + 1\r\n                    break\r\n                case directions.LEFT:\r\n                    this.x = this.x - 1\r\n                    break\r\n                case directions.TOP:\r\n                    this.y = this.y - 1\r\n                    break\r\n                case directions.DOWN:\r\n                    this.y = this.y + 1\r\n                    break\r\n            }\r\n        }\r\n\r\n        window.requestAnimationFrame(() => this.#update(direction))\r\n    }\r\n\r\n    #update(direction) {\r\n        this.#playerEl.style.transform = `translate(${this.x * 50}px, ${this.y * 50}px)`\r\n\r\n        this.#frame ++\r\n\r\n        if (this.#frame > MAX_FRAMES) {\r\n            this.#frame = 1\r\n        }\r\n\r\n        this.#playerEl.className = 'player'\r\n        this.#playerEl.classList.add(`${direction}-${this.#frame}`)\r\n    }\r\n}","import './portal.scss'\r\n\r\nconst LEVEL_WIDTH = 13\r\nconst LEVEL_HEIGHT = 13\r\n\r\nexport class Portal {\r\n    #portal = document.createElement('div')\r\n    #rootEl = document.getElementById('root');\r\n    x = 1\r\n    y = 1\r\n\r\n    render() {\r\n        this.x = Math.floor(Math.random() * (LEVEL_WIDTH - 2)) + 1\r\n        this.y = Math.floor(Math.random() * (LEVEL_HEIGHT - 2)) + 1\r\n\r\n        if((this.y % 2 === 0) && (this.x % 2 === 0)) {\r\n            this.x = this.x + 1\r\n        }\r\n\r\n        this.#portal.classList.add('portal')\r\n        this.#portal.style.cssText = `\r\n            top: ${this.y*50}px;\r\n            left: ${this.x*50}px;\r\n        `\r\n\r\n        this.#rootEl.appendChild(this.#portal)\r\n        this.#animate()\r\n    }\r\n\r\n    destroy() {\r\n        this.#portal.remove()\r\n    }\r\n\r\n    #animate() {   \r\n        let frameX = 1\r\n        let frameY = 1\r\n\r\n        const animate = () => {\r\n            frameX++\r\n            frameY++\r\n            if (frameX > 4) {\r\n                frameX = 1\r\n            }\r\n\r\n            if (frameY > 3) {\r\n                frameY = 1\r\n            }\r\n\r\n            this.#portal.style.backgroundPositionX = `-${frameX*50}px`\r\n            this.#portal.style.backgroundPositionY = `-${frameY*50}px)`\r\n\r\n            setTimeout(() => {\r\n                window.requestAnimationFrame(() => animate())\r\n            }, 100)\r\n        }\r\n\r\n        animate()\r\n    }\r\n}","import splashScreen from '../../assets/splash-screen.jpg';\r\n\r\nexport class Splash {\r\n    #splashEl = document.createElement('div');\r\n\r\n    render() {\r\n        const docStyles = document.createElement('style')\r\n        docStyles.innerHTML = `\r\n            .splash-screen {\r\n                background: url(${splashScreen});\r\n                width: 650px;\r\n                height: 650px;\r\n            }\r\n\r\n            .splash-screen-1 {\r\n                background-position-x: 0;\r\n            }\r\n\r\n            .splash-screen-2 {\r\n                background-position-x: -650px;\r\n            }\r\n        `\r\n        document.head.appendChild(docStyles)\r\n        \r\n        const rootEl = document.getElementById('root');\r\n        \r\n        this.#splashEl.classList.add('splash-screen')\r\n        rootEl.appendChild(this.#splashEl);\r\n\r\n        this.#animate();\r\n    }\r\n\r\n    destroy() {\r\n        this.#splashEl.remove();\r\n    }\r\n\r\n    #animate() {\r\n        let frame = 1\r\n\r\n        const backgroundAnimation = () => {\r\n            this.#splashEl.classList.remove(`splash-screen-${frame}`)\r\n\r\n            if (frame >= 2) {\r\n                frame = 0\r\n            }\r\n\r\n            frame++\r\n            \r\n            this.#splashEl.classList.add(`splash-screen-${frame}`)\r\n\r\n            setTimeout(() => {\r\n                window.requestAnimationFrame(() => backgroundAnimation())\r\n            }, 300)\r\n        }\r\n\r\n        backgroundAnimation();\r\n    }\r\n}","import { directions } from \"./constants\"\r\nimport { ExitScreen } from \"./exit-screen\"\r\nimport { Level } from \"./level\"\r\nimport { Player } from \"./player\"\r\nimport { Portal } from \"./portal\"\r\nimport { Splash } from \"./splash\"\r\nimport soundtrackAudio from '../../assets/soundtrack.mp3'\r\nimport armBombTrackAudio from '../../assets/arm-bomb.mp3'\r\nimport explodeTrackAudio from '../../assets/explosion.mp3'\r\nimport exitTrackAudio from '../../assets/exit.mp3'\r\n\r\nexport class Game {\r\n    #level = new Level()\r\n    #player = new Player()\r\n    #portal = new Portal()\r\n    #exitScreen = new ExitScreen();\r\n    #splashScreen = new Splash();\r\n    #keyListener = () => {}\r\n    #gameStarted = false;\r\n    #audio = {\r\n        game: {\r\n            audioElement: document.createElement('audio'),\r\n            sourceElement: document.createElement('source')\r\n        },\r\n        bomb: {\r\n            audioElement: document.createElement('audio'),\r\n            sourceElement: document.createElement('source')\r\n        },\r\n        explosion: {\r\n            audioElement: document.createElement('audio'),\r\n            sourceElement: document.createElement('source')\r\n        },\r\n        exit: {\r\n            audioElement: document.createElement('audio'),\r\n            sourceElement: document.createElement('source')\r\n        }\r\n    }\r\n\r\n    init() {\r\n        this.#splashScreen.render()\r\n        this.#addKeysListener()\r\n        this.#startSoundEffects()\r\n    }\r\n\r\n    #startTheGame() {\r\n        this.#level.render()\r\n        this.#player.render()\r\n        this.#portal.render()\r\n    }\r\n\r\n    #startSoundEffects() {\r\n        this.#audio.game.sourceElement.src = soundtrackAudio\r\n        this.#audio.game.sourceElement.type = 'audio/mpeg'\r\n        this.#audio.game.audioElement.setAttribute('loop', '')\r\n        this.#audio.game.audioElement.setAttribute('autoplay', '')\r\n        this.#audio.game.audioElement.appendChild(this.#audio.game.sourceElement)\r\n\r\n        this.#audio.bomb.sourceElement.src = armBombTrackAudio\r\n        this.#audio.bomb.sourceElement.type = 'audio/mpeg'\r\n        this.#audio.bomb.audioElement.appendChild(this.#audio.bomb.sourceElement)\r\n\r\n        this.#audio.explosion.sourceElement.src = explodeTrackAudio\r\n        this.#audio.explosion.sourceElement.type = 'audio/mpeg'\r\n        this.#audio.explosion.audioElement.appendChild(this.#audio.explosion.sourceElement)\r\n\r\n        this.#audio.exit.sourceElement.src = exitTrackAudio\r\n        this.#audio.exit.sourceElement.type = 'audio/mpeg'\r\n        this.#audio.exit.audioElement.appendChild(this.#audio.exit.sourceElement)\r\n\r\n        document.getElementById('root').appendChild(this.#audio.game.audioElement)\r\n    }\r\n\r\n    #addKeysListener() {\r\n        this.#keyListener = (event) => {\r\n            if (!this.#gameStarted) {\r\n                this.#splashScreen.destroy()\r\n                this.#startTheGame()\r\n                this.#gameStarted = true;\r\n                \r\n                return;\r\n            }\r\n            \r\n            let canMove;\r\n    \r\n            switch (event.keyCode) {\r\n                case 37:\r\n                    canMove = this.#level.canMove(this.#player, directions.LEFT)\r\n                    this.#player.move(directions.LEFT, canMove)\r\n                    break\r\n                case 38:\r\n                    canMove = this.#level.canMove(this.#player, directions.TOP)\r\n                    this.#player.move(directions.TOP, canMove)\r\n                    break\r\n                case 39:\r\n                    canMove = this.#level.canMove(this.#player, directions.RIGHT)\r\n                    this.#player.move(directions.RIGHT, canMove)\r\n                    break\r\n                case 40:\r\n                    canMove = this.#level.canMove(this.#player, directions.DOWN)\r\n                    this.#player.move(directions.DOWN, canMove)\r\n                    break\r\n                case 32:\r\n                    this.#level.armBomb(this.#player.x, this.#player.y, () => this.#audio.explosion.audioElement.play())\r\n                    this.#audio.bomb.audioElement.play()\r\n                    break\r\n            }\r\n    \r\n            if (this.#portal.x === this.#player.x && this.#portal.y === this.#player.y) {\r\n                console.log('it exit')\r\n                this.#exitGame();\r\n            }\r\n        }\r\n\r\n        document.addEventListener('keydown', this.#keyListener)\r\n    }\r\n\r\n    #removeKeysListener() {\r\n        document.removeEventListener('keydown', this.#keyListener)\r\n    }\r\n\r\n    #exitGame() {\r\n        this.#level.destroy()\r\n        this.#player.destroy()\r\n        this.#portal.destroy()\r\n        \r\n        this.#removeKeysListener()\r\n        this.#exitScreen.render()\r\n\r\n        this.#audio.game.audioElement.pause()\r\n        this.#audio.exit.audioElement.play()\r\n    }\r\n}","import './app.scss'\r\nimport { Game } from './core/game'\r\n\r\nconst game = new Game();\r\ngame.init();\r\n\r\n"]}